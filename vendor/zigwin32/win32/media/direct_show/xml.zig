//! NOTE: this file is autogenerated, DO NOT MODIFY
//--------------------------------------------------------------------------------
// Section: Constants (1)
//--------------------------------------------------------------------------------
pub const CLSID_XMLGraphBuilder = Guid.initString("1bb05961-5fbf-11d2-a521-44df07c10000");

//--------------------------------------------------------------------------------
// Section: Types (1)
//--------------------------------------------------------------------------------
// TODO: this type is limited to platform 'windows5.0'
const IID_IXMLGraphBuilder_Value = Guid.initString("1bb05960-5fbf-11d2-a521-44df07c10000");
pub const IID_IXMLGraphBuilder = &IID_IXMLGraphBuilder_Value;
pub const IXMLGraphBuilder = extern union {
    pub const VTable = extern struct {
        base: IUnknown.VTable,
        BuildFromXML: *const fn(
            self: *const IXMLGraphBuilder,
            pGraph: ?*IGraphBuilder,
            pxml: ?*IXMLElement,
        ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        SaveToXML: *const fn(
            self: *const IXMLGraphBuilder,
            pGraph: ?*IGraphBuilder,
            pbstrxml: ?*?BSTR,
        ) callconv(@import("std").os.windows.WINAPI) HRESULT,
        BuildFromXMLFile: *const fn(
            self: *const IXMLGraphBuilder,
            pGraph: ?*IGraphBuilder,
            wszFileName: ?[*:0]const u16,
            wszBaseURL: ?[*:0]const u16,
        ) callconv(@import("std").os.windows.WINAPI) HRESULT,
    };
    vtable: *const VTable,
    IUnknown: IUnknown,
    pub fn BuildFromXML(self: *const IXMLGraphBuilder, pGraph: ?*IGraphBuilder, pxml: ?*IXMLElement) callconv(.Inline) HRESULT {
        return self.vtable.BuildFromXML(self, pGraph, pxml);
    }
    pub fn SaveToXML(self: *const IXMLGraphBuilder, pGraph: ?*IGraphBuilder, pbstrxml: ?*?BSTR) callconv(.Inline) HRESULT {
        return self.vtable.SaveToXML(self, pGraph, pbstrxml);
    }
    pub fn BuildFromXMLFile(self: *const IXMLGraphBuilder, pGraph: ?*IGraphBuilder, wszFileName: ?[*:0]const u16, wszBaseURL: ?[*:0]const u16) callconv(.Inline) HRESULT {
        return self.vtable.BuildFromXMLFile(self, pGraph, wszFileName, wszBaseURL);
    }
};


//--------------------------------------------------------------------------------
// Section: Functions (0)
//--------------------------------------------------------------------------------

//--------------------------------------------------------------------------------
// Section: Unicode Aliases (0)
//--------------------------------------------------------------------------------
//--------------------------------------------------------------------------------
// Section: Imports (7)
//--------------------------------------------------------------------------------
const Guid = @import("../../zig.zig").Guid;
const BSTR = @import("../../foundation.zig").BSTR;
const HRESULT = @import("../../foundation.zig").HRESULT;
const IGraphBuilder = @import("../../media/direct_show.zig").IGraphBuilder;
const IUnknown = @import("../../system/com.zig").IUnknown;
const IXMLElement = @import("../../data/xml/ms_xml.zig").IXMLElement;
const PWSTR = @import("../../foundation.zig").PWSTR;

test {
    @setEvalBranchQuota(
        comptime @import("std").meta.declarations(@This()).len * 3
    );

    // reference all the pub declarations
    if (!@import("builtin").is_test) return;
    inline for (comptime @import("std").meta.declarations(@This())) |decl| {
        _ = @field(@This(), decl.name);
    }
}
